name: Build Project ðŸ˜Ž

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build project âœ¨
    runs-on: ubuntu-latest
    strategy:
      matrix:
        targetPlatform:
          - Windows
          - Android
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-

      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        # env:
        #   UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
        #   UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        #   UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        # env:
        #   UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
        #   UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        #   UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          allowDirtyBuild: true
          targetPlatform: ${{ matrix.targetPlatform }}
      #Return License
      - name: Return license
        uses: game-ci/unity-return-license@v2
        if: always()
      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}-${{ steps.myBuildStep.outputs.outputName }}
          path: build/${{ matrix.targetPlatform }}/${{ steps.myBuildStep.outputs.outputName }}
