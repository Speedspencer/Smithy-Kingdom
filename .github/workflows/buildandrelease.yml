on:
  push:
    tags:
      - 'v*'

name: Create Release

jobs:
  build:
    name: Build project
    runs-on: ubuntu-latest
    strategy:
      matrix:
        targetPlatform:
          - Android
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-

      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        # env:
        #   UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
        #   UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        #   UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        id: buildProject
        # env:
        #   UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
        #   UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        #   UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          allowDirtyBuild: true
          versioning: Semantic
          targetPlatform: ${{ matrix.targetPlatform }}

      #Get Version
      - name: Get Version
        id: get_version
        uses: battila7/get-version-action@v2

      - run: echo ${{ steps.get_version.outputs.version }}

      #Return License
      # - name: Return license
      #   uses: game-ci/unity-return-license@v2
      #   if: always()

      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}-${{ steps.get_version.outputs.version }}
          path: build/${{ matrix.targetPlatform }}
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # This is important for the Git history
      - name: Extract Repo Attributes
        id: attrs # This is important for future referencing
        uses: ibnesayeed/repo-attrs@master
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          prerelease: true
          # Utilize extracted attributes from the previous step
          body: |
            ## Changes in this Release

            History from `${{ steps.attrs.outputs.tail }}` to `${{ steps.attrs.outputs.head }}`

            ### Commits

            ${{ steps.attrs.outputs.commits }}

            ### Pull Requests

            ${{ steps.attrs.outputs.prs }}

            ### Contributors

            ${{ steps.attrs.outputs.contributors }}

            ### Successful Build

            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            ### Files

            ```
            ${{ steps.attrs.outputs.files }}
            ```
